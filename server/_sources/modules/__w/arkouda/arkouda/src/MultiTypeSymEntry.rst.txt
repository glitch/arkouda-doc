.. default-domain:: chpl

.. module:: MultiTypeSymEntry

MultiTypeSymEntry
=================
**Usage**

.. code-block:: chapel

   use MultiTypeSymEntry;


or

.. code-block:: chapel

   import MultiTypeSymEntry;

.. function:: proc toSymEntry(gse: borrowed GenSymEntry, type etype)

   Casts a GenSymEntry to the specified type and returns it.
   
   :arg gse: generic sym entry
   :type gse: borrowed GenSymEntry
   
    :arg etype: type for gse to be cast to
    :type etype: type
   

.. class:: GenSymEntry

   This is a dummy class to avoid having to talk about specific
   instantiations of SymEntry. 


   .. attribute:: var dtype: DType

   .. attribute:: var itemsize: int

   .. attribute:: var size: int = 0

   .. attribute:: var ndim: int = 1

   .. attribute:: var shape: 1*(int) = (0)

   .. method:: proc init(type etype, len: int = 0)

   .. method:: proc toSymEntry(type etype)

      Cast this `GenSymEntry` to `borrowed SymEntry(etype)`
      
      This function will halt if the cast fails.
      
      :arg etype: `SymEntry` type parameter
      :type etype: type
      

.. class:: SymEntry : GenSymEntry

   Symbol table entry
   Only supports 1-d arrays for now 


   .. attribute:: type etype

      
      generic element type array
      etype is different from dtype (chapel vs numpy)
      

   .. attribute:: var aD: makeDistDom(size).type 

      
      'aD' is the distributed domain for 'a' whose value and type
      are defined by makeDistDom() to support varying distributions
      

   .. attribute:: var a: [aD] etype

   .. method:: proc init(len: int, type etype)

      
      This init takes length and element type
      
      :arg len: length of array to be allocated
      :type len: int
      
      :arg etype: type to be instantiated
      :type etype: type
      

   .. method:: proc init(a: [?D] ?etype)

      This init takes an array of a type
      
      :arg a: array
      :type a: [] ?etype
      

   .. method:: proc postinit()

      
      Verbose flag utility method
      

   .. method:: proc deinit()

      
      Verbose flag utility method
      

   .. method:: override proc writeThis(f) throws

